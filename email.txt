import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn import metrics


df = pd.read_csv('emails.csv')


# df.head()

# df.isnull().sum()



x = df.drop(['Email No.', 'Prediction'], axis = 1)
y = df['Prediction']


# sns.countplot(x=y)

#  ### Preprocessing 



from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler()
x_scaled = scaler.fit_transform(x)



x_scaled



# ### Model building


from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x_scaled, y, random_state = 0, test_size = 0.33)


# #### 1] Knn

from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import classification_report, accuracy_score
knn = KNeighborsClassifier(n_neighbors = 5)
knn.fit(x_train, y_train)
y_pred = knn.predict(x_test)

print("Prediction",y_pred)
# print("KNN accuracy = ",metrics.accuracy_score(y_test,y_pred))

accuracy_score(y_test, y_pred)

print("Confusion matrix",metrics.confusion_matrix(y_test,y_pred))

print(classification_report(y_test, y_pred))


# #### 2] SVM

from sklearn.svm import SVC
svm = SVC(kernel = 'linear')
svm.fit(x_train, y_train)
y_pred = svm.predict(x_test)

metrics.confusion_matrix(y_true=y_test, y_pred=y_pred)
print("SVM accuracy = ")
accuracy_score(y_test, y_pred)





